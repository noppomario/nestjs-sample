{
  "name": "nestjs-sample",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "clean": "rimraf dist",
    "build": "run-s -l build:**",
    "build:prisma1": "prisma generate --schema prisma/1.usersdb/usersdb.schema.prisma",
    "build:prisma2": "prisma generate --schema prisma/2.logsdb/logsdb.schema.prisma",
    "build::": "nest build",
    "start": "run-s -l build:prisma1 build:prisma2 gen:bundle-api-yml start::",
    "start::": "cross-env NODE_ENV=development nest start",
    "start:dev": "run-s -l build:prisma1 build:prisma2 gen:bundle-api-yml start:dev::",
    "start:dev::": "cross-env NODE_ENV=development nest start --watch",
    "start:debug": "run-s -l build:prisma1 build:prisma2 gen:bundle-api-yml start:debug::",
    "start:debug::": "cross-env NODE_ENV=development nest start --debug --watch",
    "start:prod": "cross-env NODE_ENV=production node dist/main",
    "start:compodoc": "compodoc -p tsconfig.json -d dist/docs/compodoc -s",
    "lint": "run-p -c -l lint:**",
    "lint:prettier": "prettier --check .",
    "lint:eslint": "eslint \"{src,apps,libs,test}/**/*.ts\"",
    "lint:build": "npm run build::",
    "fix": "run-s -l fix:**",
    "fix:prettier": "prettier --write .",
    "fix:eslint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "doc": "run-p -c -l doc:**",
    "doc:api": "redoc-cli build docs/openapi/openapi.yaml --output dist/docs/openapi-static.html",
    "doc:compodoc": "compodoc -p tsconfig.json -d dist/docs/compodoc",
    "gen": "run-s -c -l gen:**",
    "gen:bundle-api-yml": "swagger-cli bundle -t yaml docs/openapi/openapi.yaml -o dist/docs/openapi-bundle.yaml",
    "gen:angular": "openapi-generator-cli generate -g typescript-angular -i dist/docs/openapi-bundle.yaml -o dist/client/angular",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json"
  },
  "dependencies": {
    "@nestjs/common": "^9.0.0",
    "@nestjs/config": "^2.2.0",
    "@nestjs/core": "^9.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-express": "^9.0.0",
    "@nestjs/serve-static": "^3.0.0",
    "@nestjs/swagger": "^6.0.4",
    "@prisma/client": "^4.1.0",
    "class-validator": "^0.13.2",
    "cross-env": "^7.0.3",
    "helmet": "^5.1.0",
    "joi": "^17.6.0",
    "js-yaml": "^4.1.0",
    "nestjs-pino": "^3.1.1",
    "pino-http": "^8.1.1",
    "pino-pretty": "^8.1.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "@apidevtools/swagger-cli": "^4.0.4",
    "@compodoc/compodoc": "^1.1.19",
    "@nestjs/cli": "^9.0.0",
    "@nestjs/schematics": "^9.0.0",
    "@nestjs/testing": "^9.0.0",
    "@openapitools/openapi-generator-cli": "^2.5.1",
    "@types/express": "^4.17.13",
    "@types/jest": "28.1.4",
    "@types/js-yaml": "^4.0.5",
    "@types/node": "^16.0.0",
    "@types/supertest": "^2.0.11",
    "@types/uuid": "^8.3.4",
    "@typescript-eslint/eslint-plugin": "^5.0.0",
    "@typescript-eslint/parser": "^5.0.0",
    "eslint": "^8.0.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-jest": "^26.5.3",
    "eslint-plugin-n": "^15.2.4",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-security": "^1.5.0",
    "jest": "28.1.2",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.3.2",
    "prisma": "^4.1.0",
    "redoc-cli": "^0.13.16",
    "source-map-support": "^0.5.20",
    "supertest": "^6.1.3",
    "ts-jest": "28.0.5",
    "ts-loader": "^9.2.3",
    "ts-node": "^10.0.0",
    "tsconfig-paths": "4.0.0",
    "typescript": "^4.3.5"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
